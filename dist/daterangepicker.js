!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Daterangepicker",[],e):"object"==typeof exports?exports.Daterangepicker=e():t.Daterangepicker=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,o)=>{for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};return(()=>{t.r(e),t.d(e,{LOCK_LOCKED:()=>s,LOCK_UNAVAILABLE:()=>i,createElement:()=>n,default:()=>l,formatDate:()=>a});const o=function(t={}){const e={},o=function(t,o){const i=[];return"function"==typeof o.callback?i.push(o.callback):"object"==typeof o.callback&&Array.isArray(o.callback)&&o.callback.filter((t=>"function"==typeof t)).forEach((t=>{i.push(t)})),e[t]||(e[t]=[]),i.forEach((i=>{const s={once:o.once||!1,callback:i};e[t].push(s)})),e[t].length};if("object"==typeof t&&null!==t)for(let e in t)o(e,{callback:t[e]});this.on=function(t,e){return o(t,{callback:e})},this.once=function(t,e){return o(t,{once:!0,callback:e})},this.emit=function(t){if(!e[t]||!e[t].length)return;const o=[].slice.call(arguments,1),i=e[t].some((t=>!0===t.callback.apply(this,o)));return e[t]=e[t].filter((t=>!t.once)),i}},i=1,s=2,n=t=>{const e=document.createElement("template");return e.insertAdjacentHTML("afterbegin",t),e.children.length>1?[...e.children]:e.firstElementChild},a=function(t,e="Y-m-d"){if(t instanceof Date)return e.replace("Y",t.getFullYear()).replace("m",("0"+(t.getMonth()+1)).slice(-2)).replace("d",("0"+t.getDate()).slice(-2))};function r(t,e={}){if(t.instance)return t.instance;t.instance=this,o.call(this,e.on),this._$container=t;const i=(t,e)=>void 0===t?e:t;this.options={firstDayOfTheWeek:i(e.firstDayOfTheWeek,1)%7,singleMode:i(e.singleMode,!1),locale:i(e.locale,"ru-RU"),minDays:i(e.minDays,1),monthsCount:i(e.monthsCount,12),perRow:i(e.perRow,void 0),currentDate:i(e.currentDate,new Date),selectedDate:i(e.selectedDate,new Date),minDate:i(e.minDate,void 0),maxDate:i(e.maxDate,void 0),breakpoints:i(e.breakpoints,{}),internalInputs:i(e.internalInputs,!0),readOnly:i(e.readOnly,!1),filter:Object.assign({lockDays:null,tooltipText:null},e.filter||{})},this.init()}Object.assign(r.prototype,o.prototype),Object.defineProperty(r.prototype,"constructor",{value:r,writable:!0,enumerable:!1}),r.prototype.init=function(){void 0===this.options.perRow&&(this.options.perRow=this.options.monthsCount),this.options.currentDate&&this.options.currentDate instanceof Date||(this.options.currentDate=new Date),this.options.selectedDate&&this.options.selectedDate instanceof Date||(this.options.selectedDate=new Date(this.options.currentDate.getTime())),["minDate","currentDate","selectedDate","maxDate"].forEach((t=>{this.options[t]&&this.options[t]instanceof Date&&this.options[t].setHours(0,0,0,0)})),this.options.breakpoints[this._breakpoint=0]=Object.assign({},this.options),this._$picker=n(`<div class="Daterangepicker">\n            ${this.options.internalInputs?`<div class="Daterangepicker__inputs">\n                    ${this.options.singleMode?'<input type="hidden" name="date">':'<input type="hidden" name="date_from">\n                           <input type="hidden" name="date_to">'}\n                </div>`:""}\n            <div class="Daterangepicker__months"></div>\n            <div class="Daterangepicker__tooltip">\n                <div class="Daterangepicker__tooltip-content"></div>\n            </div>\n        </div>`),this._$months=this._$picker.querySelector(".Daterangepicker__months"),this._$tooltip=this._$picker.querySelector(".Daterangepicker__tooltip"),this._$tooltipContent=this._$picker.querySelector(".Daterangepicker__tooltip-content"),this._$inputs=this._$picker.querySelectorAll('input[name^="date"]'),this._selection={},this._visualSelection={},this.selectDate(this.options.selectedDate),this._$container.appendChild(this._$picker),Object.keys(this.options.breakpoints).length&&(window.addEventListener("resize",this._onWindowResizeEvent.bind(this)),this._onWindowResizeEvent())},r.prototype.getMonthFormatted=function(t){const e=this.getDateTimeFormat(t,{month:"long"});return e.slice(0,1).toUpperCase()+e.slice(1)},r.prototype.getDateTimeFormat=function(t,e){return Intl.DateTimeFormat(this.options.locale,e).format(t)},r.prototype.getWeekDaysFormatted=function(){const t=new Date,e=[];t.setDate(t.getDate()-t.getDay()),t.setDate(t.getDate()+this.options.firstDayOfTheWeek);for(let o=0;o<7;++o)e.push({day:t.getDay(),title:this.getDateTimeFormat(t,{weekday:"short"})}),t.setDate(t.getDate()+1);return e},r.prototype.getDaysCountInMonth=function(t){const e=new Date(t.getTime());return e.setDate(1),e.setHours(0,0,0,0),e.setMonth(e.getMonth()+1),e.setDate(0),e.getDate()},r.prototype.rangeReset=function(){this._rangeVisualReset(),this._selection={},this.emit("range-reset")},r.prototype.rangeSelect=function(t,e){if(!(t instanceof Date&&e instanceof Date))return;if(t.setHours(0,0,0,0),e.setHours(0,0,0,0),!this.getIsRangeSelectable(t,e))return;const o=this._$getDayByDate(t),i=this._$getDayByDate(e);o&&o.classList.add("is-selected","is-selected-from"),i&&i.classList.add("is-selected","is-selected-to"),this._rangeVisualSelect(t,e),this._selection.date_from=t,this._selection.date_to=e,t>e&&([t,e]=[e,t]),this._$inputs[0]&&(this._$inputs[0].value=a(t)),this._$inputs[1]&&(this._$inputs[1].value=a(e)),this.emit("range-select",t,e)},r.prototype.getIsRangeSelectable=function(t,e){if(t.setHours(0,0,0,0),e.setHours(0,0,0,0),t>e&&([t,e]=[e,t]),Math.abs(t.getTime()-e.getTime())/1e3/86400<this.options.minDays)return!1;const o=new Date(t.getTime());for(;o<e;){if(this._filterLockDays(o))return!1;o.setDate(o.getDate()+1)}return!0},r.prototype.getDateFrom=function(){if(this._selection.date_from)return this._selection.date_to&&this._selection.date_from>this._selection.date_to?this._selection.date_to:this._selection.date_from},r.prototype.getDate=r.prototype.getDateFrom,r.prototype.getDateTo=function(){if(this._selection.date_to)return this._selection.date_from&&this._selection.date_from>this._selection.date_to?this._selection.date_from:this._selection.date_to},r.prototype.plural=function(t,e){return(t%10==1&&t%100!=11?e[0]:t%10>=2&&t%10<=4&&(t%100<10||t%100>=20)?e[1]:e[2]).replace("%d",t)},r.prototype._$createMonths=function(t){for(;this._$months.lastElementChild;)this._$months.removeChild(this._$months.lastElementChild);this._tooltipHide();const e=new Date(t.getTime());e.setDate(1),e.setHours(0,0,0,0);const o=[];for(let t=0;t<this.options.monthsCount;++t)o.push(this._$createMonth(e)),e.setMonth(e.getMonth()+1);for(let t=0;t<o.length;t+=this.options.perRow){const e=document.createElement("div");e.className="Daterangepicker__row",o.slice(t,t+this.options.perRow).forEach((t=>{e.appendChild(t)})),this._$months.appendChild(e)}(this._selection.date_from||this._selection.date_to)&&this._rangeVisualSelect(this._selection.date_from,this._selection.date_to)},r.prototype._$createMonth=function(t){const e=t.getMonth(),o=this.getMonthFormatted(t),i=this.getWeekDaysFormatted(),s=n(`<div class="Month" data-time="${t.getTime()}">\n            <div class="Month__header">\n                <div class="Month__arrow Month__arrow--prev${this.options.minDate&&t<=this.options.minDate?" is-disabled":""}">\n                    <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M7 13L1 7L7 1" stroke="#8C8C8C" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n                    </svg>\n                </div>\n                <div class="Month__title">${o} ${t.getFullYear()}</div>\n                <div class="Month__arrow Month__arrow--next${this.options.maxDate&&t>=this.options.maxDate?" is-disabled":""}">\n                    <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M1 0.999999L7 7L1 13" stroke="#8C8C8C" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n                    </svg>\n                </div>\n            </div>\n            <div class="Month__week">${i.map((t=>`<div class="Month__weekday">${t.title}</div>`)).join("")}</div>\n            <div class="Month__days"></div>\n        </div>`);[{selector:".Month__arrow--prev",name:"prev"},{selector:".Month__arrow--next",name:"next"}].forEach((t=>{const e=s.querySelector(t.selector);e.addEventListener("click",(o=>{o.stopPropagation(),this._onArrowClick(e,t.name)}))}));const a=s.querySelector(".Month__days"),r=new Date(t.getTime());for(r.setDate(1),r.setHours(0,0,0,0);r.getMonth()==e;){const t=this._$createWeek();i.forEach((o=>{r.getDay()==o.day&&r.getMonth()==e?(t.appendChild(this._$createDay(r)),r.setDate(r.getDate()+1)):t.appendChild(this._$createEmptyDay())})),a.appendChild(t)}return s},r.prototype._onArrowClick=function(t,e){if(t.classList.contains("is-disabled"))return!1;const o=new Date(parseInt(this._$months.querySelector(".Month").dataset.time,10));if(o.setDate(1),o.setHours(0,0,0,0),o.setMonth(o.getMonth()+("prev"==e?-this.options.monthsCount:this.options.monthsCount)),o<this.options.minDate&&o.setTime(this.options.minDate.getTime()),this.options.maxDate){const t=new Date(o.getTime());t.setMonth(t.getMonth()+this.options.monthsCount),t>this.options.maxDate&&(o.setTime(this.options.maxDate.getTime()),o.setMonth(o.getMonth()-this.options.monthsCount+1))}this.selectDate(o)},r.prototype.selectDate=function(t){this.options.selectedDate=t,this._$createMonths(t),this.emit("select-date",t)},r.prototype._$createWeek=function(t){return n('<div class="Week"></div>')},r.prototype._$createDay=function(t){const e=n(`<div class="Day" data-time="${t.getTime()}" data-day="${t.getDay()}">${t.getDate()}</div>`);return this.options.readOnly||(e.addEventListener("click",this._onDayClickEvent.bind(this)),this.options.singleMode||e.addEventListener("mouseenter",this._onDayMouseEnterEvent.bind(this))),this._updateDay(e),e},r.prototype.update=function(){this._$months.querySelectorAll(".Month").forEach((t=>{this._updateMonth(t)}))},r.prototype._updateMonth=function(t){t.querySelectorAll(".Day[data-time]").forEach((t=>{this._updateDay(t)}))},r.prototype._updateDay=function(t){const e=new Date(parseInt(t.dataset.time,10)),o=this._filterLockDays(e),i=this.options.currentDate.getTime()==e.getTime();t.classList.toggle("is-disabled",o),t.classList.toggle("is-locked",o==s),t.classList.toggle("is-today",i)},r.prototype._onDayClickEvent=function(t){this._onDayClick(t.target)},r.prototype._onDayMouseEnterEvent=function(t){this._onDayMouseEnter(t.target)},r.prototype._onDayMouseEnter=function(t){if(!this._selection.date_from||this._selection.date_to)return;if(t.dataset.time==this._selection.date_from.getTime())return;const e=new Date(parseInt(t.dataset.time,10));this._rangeVisualSelect(this._selection.date_from,e)},r.prototype._onDayClick=function(t){if(t.classList.contains("is-disabled"))return!1;if(this.options.singleMode)return this.rangeReset(),this._selection.date_from=new Date(parseInt(t.dataset.time,10)),t.classList.add("is-selected"),void this.emit("day-select",this._selection.date_from);if(this._selection.date_from&&this._selection.date_to&&this.rangeReset(),t.classList.add("is-selected"),this._selection.date_from?this._selection.date_to||(this._selection.date_to=new Date(parseInt(t.dataset.time,10))):this._selection.date_from=new Date(parseInt(t.dataset.time,10)),this._selection.date_from&&this._selection.date_to){if(!this.getIsRangeSelectable(this._selection.date_from,this._selection.date_to))return void this.rangeReset();this.rangeSelect(this._selection.date_from,this._selection.date_to)}},r.prototype._rangeVisualReset=function(){this._$months.querySelectorAll(".Day[data-time]").forEach((t=>{t.classList.remove("is-selected","is-selected-from","is-selected-to","is-selected-between")})),this._tooltipHide()},r.prototype._rangeVisualSelect=function(t,e){t&&t instanceof Date&&t.setHours(0,0,0,0),e&&e instanceof Date&&e.setHours(0,0,0,0);let o=t instanceof Date?t.getTime():0,i=e instanceof Date?e.getTime():0;o>i&&([o,i]=[i,o]);const s=this._$months.querySelectorAll(".Day[data-time]");for(let t=0;t<s.length;++t)s[t].classList.toggle("is-selected-between",s[t].dataset.time>o&&s[t].dataset.time<i);const n=this._$getDayByDate(t),a=this._$getDayByDate(e);if(this._visualSelection.$day_from_old&&this._visualSelection.$day_from_old!=n&&this._visualSelection.$day_from_old.classList.remove("is-selected","is-selected-from"),this._visualSelection.$day_to_old&&this._visualSelection.$day_to_old!=a&&this._visualSelection.$day_to_old.classList.remove("is-selected","is-selected-to"),n&&n.classList.add("is-selected","is-selected-from"),a&&a.classList.add("is-selected","is-selected-to"),this._visualSelection.$day_from_old=n,this._visualSelection.$day_to_old=a,this._selection.$day_from=n,this._selection.$day_to=a,a){const t=Math.floor(Math.abs(o-i)/864e5)+1;this._tooltipShow(t)}},r.prototype._tooltipShow=function(t){this._$tooltipContent.textContent=this._filterTooltipText(t),this._$tooltip.classList.toggle("is-show",this._$tooltip.textContent.length),this._tooltipUpdate()},r.prototype._tooltipUpdate=function(){if(!this._selection.$day_to)return;let t=0,e=0,o=this._selection.$day_to;do{e+=o.offsetTop,t+=o.offsetLeft}while((o=o.offsetParent)&&o!=this._$picker);this._$tooltip.style.top=Math.round(e-this._$tooltip.offsetHeight)+"px",this._$tooltip.style.left=Math.round(t+this._selection.$day_to.offsetWidth/2-this._$tooltip.offsetWidth/2)+"px"},r.prototype._tooltipHide=function(){this._$tooltip.classList.remove("is-show")},r.prototype._filterTooltipText=function(t){return"function"==typeof this.options.filter.tooltipText?this.options.filter.tooltipText.call(this,t)||"":this.plural(t,["%d день","%d дня","%d дней"]).replace("%d",t)},r.prototype._filterLockDays=function(t){return t<this.options.minDate||t>this.options.maxDate?i:"function"==typeof this.options.filter.lockDays&&this.options.filter.lockDays.call(this,t)},r.prototype._onWindowResizeEvent=function(t){this._selection.$day_to&&this._tooltipUpdate();let e=0;const o=Object.keys(this.options.breakpoints).sort(((t,e)=>t-e));for(let t in o)if(window.innerWidth<=o[t]){e=o[t];break}this._setBreakpoint(e)},r.prototype._setBreakpoint=function(t){this._breakpoint!=t&&(this._breakpoint=t,this.options.breakpoints[t]&&(Object.assign(this.options,this.options.breakpoints[t]),this._$createMonths(this.options.selectedDate)))},r.prototype._$getDayByDate=function(t){const e=t instanceof Date?t.getTime():0;return this._$months.querySelector('.Day[data-time="'+e+'"]')},r.prototype._$createEmptyDay=function(){return n('<div class="Day is-empty"></div>')};const l=r})(),e})()}));